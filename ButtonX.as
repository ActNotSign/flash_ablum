package{		import flash.text.TextField ;	import flash.text.TextFieldType ;	import flash.text.TextFormat  ;	import flash.display.LineScaleMode;    import flash.display.CapsStyle;    import flash.display.JointStyle;	import flash.ui.Mouse ;	import flash.display.Sprite ;	import flash.geom.Matrix ;	import flash.display.SpreadMethod ;	import flash.display.GradientType  ;	import flash.events.MouseEvent ;	import flash.events.TimerEvent ;	import flash.utils.Timer ;	import flash.events.Event;		public class ButtonX extends Sprite{		private var times:uint ;		private var rate:uint ;		private var bgMouse:Sprite ;				//点击回调函数		private var bkCallClick:Function;				public function ButtonX(width:uint , height:uint , name:String ,fontColor:uint = 0x000000,fontSize:uint =12,bold:Boolean =false ){						DrawUI(width , height , name ,fontColor ,fontSize,bold);			AddEvent();			 		}				private function DrawUI(width:uint , height:uint , name:String ,fontColor:uint ,fontSize:uint,bold:Boolean =false ,backgroundColor:uint=0x3fa156){					var fillType:String = GradientType.LINEAR ;  			var colors:Array = [backgroundColor, backgroundColor];  			var alphas:Array = [1, 1];  			var ratios:Array = [0x0, 0xff]; 			var matr:Matrix = new Matrix();			matr.createGradientBox(width, height, (1/2)*Math.PI, 0, 0);			var spreadMethod:String = SpreadMethod.PAD;						this.graphics.lineStyle(0.6, backgroundColor, 1 , true, LineScaleMode.VERTICAL,                               CapsStyle.NONE, JointStyle.MITER, 10);			this.graphics.beginGradientFill(fillType, colors, alphas, ratios, matr, spreadMethod);  			this.graphics.drawRoundRect(0,0,width,height,6,6);						//添加鼠标移入背景			bgMouse = new Sprite();			var colors1:Array = [ backgroundColor,0xffffff ];			matr.createGradientBox(width, 10, (3/2)*Math.PI, 0, 0);			bgMouse.graphics.beginGradientFill(fillType, colors1, alphas, ratios, matr, spreadMethod);  			bgMouse.graphics.drawRoundRect(1,1,width-1,height-1,6,6);			//先设置为0；			bgMouse.alpha  = 0;									this.buttonMode = true;			this.useHandCursor = true ; 						var txt :TextField  = new TextField();			var txtformat :TextFormat =new TextFormat();			txtformat.size =fontSize;			txtformat.font = "宋体";			txtformat.bold = bold;			txt.selectable = false ;			txt.text =name;			txt.setTextFormat(txtformat);			txt.textColor  =fontColor;			txt.x =(width - txt.textWidth  )/2-2;			txt.y =(height - txt.textHeight )/2-2; 			txt.width = width-txt.x ;			txt.height = height;						addChild(bgMouse);			addChild (txt);					}				private function AddEvent(){			this.times = 10;			this.rate=11;			this.addEventListener ( MouseEvent.ROLL_OVER ,MouseOver);			this.addEventListener ( MouseEvent.ROLL_OUT ,MouseOut);			this.addEventListener ( MouseEvent.CLICK ,onClick);		}				//响应鼠标事件函数		private function MouseOver(Mouse_Event:MouseEvent){			Mouse.cursor ="button";			var TimeMover:Timer = new Timer(this.rate,this.times);			TimeMover.start ();			TimeMover.addEventListener(TimerEvent.TIMER,OverFlash);		}		private function MouseOut(Mouse_Event:MouseEvent){			Mouse.cursor ="auto";			var TimeMout:Timer = new Timer(this.rate,this.times);			TimeMout.start ();			TimeMout.addEventListener(TimerEvent.TIMER,OutFlash);		}		//时间		private function OverFlash(Te:TimerEvent){			bgMouse.alpha  +=0.1;		}		private function OutFlash(Te:TimerEvent ){			bgMouse.alpha  -=0.1;		}		//设置回调函数		public function set callBack(fun:Function):void{			bkCallClick=fun;		}		public function onClick(evt:Event):void{			bkCallClick();		}					}}